{"version":3,"sources":["component/Intro.js","component/EnterTime.js","component/EnterNameA.js","component/EnterNameB.js","component/Scoreboard.js","component/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Intro","className","to","EnterTime","useState","time","type","value","min","max","EnterNameA","name","EnterNameB","Sroceboard","PageNotFound","App","basename","process","exact","path","component","Scoreboard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kPAGe,SAASA,IACpB,OACI,yBAAKC,UAAU,0DACX,yBAAKA,UAAU,mBACf,oDACA,wEACA,kBAAC,IAAD,CAAMC,GAAG,cACL,8C,YCPD,SAASC,IAAa,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,UAElC,OACE,yBAAKJ,UAAU,+DACb,yBAAKA,UAAU,mBACb,gEACA,2BAAOK,KAAK,SAASC,MAAOF,EAAMG,IAAI,IAAIC,IAAI,OAC9C,kBAAC,IAAD,CAAMP,GAAG,iBACP,yCCRK,SAASQ,IACtB,OACE,yBAAKT,UAAU,iEACb,yBAAKA,UAAU,mBACf,+EACA,yBAAKA,UAAU,eACX,6BACE,sCACW,2BAAOK,KAAK,OAAOC,MAAM,GAAGI,KAAK,WAE1C,uCACW,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE5C,uCACW,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE5C,uCACW,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE5C,uCACW,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE5C,uCACW,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,aAGhD,6BACE,kBAAC,IAAD,CAAMT,GAAG,gBACL,wCC5BD,SAASU,IACpB,OACI,yBAAKX,UAAU,iEACX,yBAAKA,UAAU,mBACX,+EACA,yBAAKA,UAAU,eACX,sCACW,2BAAOK,KAAK,OAAOC,MAAM,GAAGI,KAAK,WAE5C,uCACa,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE9C,uCACa,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE9C,uCACa,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE9C,uCACa,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,YAE9C,uCACa,2BAAOL,KAAK,OAAOC,MAAM,GAAGI,KAAK,aAGlD,6BACI,kBAAC,IAAD,CAAMT,GAAG,cACL,uCC5BxB,IAUeW,EAVI,WACf,OACI,yBAAKZ,UAAU,+DACX,yBAAKA,UAAU,mBACZ,uCCHA,SAASa,IACpB,OACI,yBAAKb,UAAU,mEACX,yBAAKA,UAAU,mBACX,yCACA,kBAAC,IAAD,CAAMC,GAAG,KACT,yCCiBDa,MAjBf,WACE,OACE,kBAAC,IAAD,CAAYC,SAAUC,qBACpB,yBAAKhB,UAAU,OACb,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,IAAIC,UAAWpB,IACjC,kBAAC,IAAD,CAAOmB,KAAK,cAAcC,UAAWjB,IACrC,kBAAC,IAAD,CAAOgB,KAAK,gBAAgBC,UAAWV,IACvC,kBAAC,IAAD,CAAOS,KAAK,gBAAgBC,UAAWR,IACvC,kBAAC,IAAD,CAAOO,KAAK,cAAcC,UAAWC,IACrC,kBAAC,IAAD,CAAOD,UAAWN,QCPNQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.a3fb2c7a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function Intro() {\r\n    return (\r\n        <div className=\"intro d-flex justify-content-center align-items-center\">\r\n            <div className=\"text-center p-3\">\r\n            <h1>JOSDREW's Scoreboard</h1>\r\n            <p>Count point and time for basketball match</p>\r\n            <Link to=\"enter-time\">\r\n                <span>Get Start</span>\r\n            </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function EnterTime() {\r\n  const [time, setTime] = useState(\"\")\r\n  return (\r\n    <div className=\"enter-time d-flex justify-content-center align-items-center\">\r\n      <div className=\"text-center p-3\">\r\n        <p>Please select minutes per quater:</p>\r\n        <input type=\"number\" value={time} min=\"5\" max=\"15\" />\r\n        <Link to=\"/enter-name-A\">\r\n          <span>Next</span>      \r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function EnterNameA() {\r\n  return (\r\n    <div className=\"enter-name-A d-flex justify-content-center align-items-center\">\r\n      <div className=\"text-center p-3\">\r\n      <h2>Please enter team A's name and player's number:</h2>\r\n      <div className=\"container-1\">\r\n          <div>\r\n            <h1>\r\n                Team A:<input type=\"text\" value=\"\" name=\"teamA\" />\r\n            </h1>\r\n              <p>\r\n                Player 1:<input type=\"text\" value=\"\" name=\"player\" />\r\n              </p>\r\n              <p>\r\n                Player 2:<input type=\"text\" value=\"\" name=\"player\" />\r\n              </p>\r\n              <p>\r\n                Player 3:<input type=\"text\" value=\"\" name=\"player\" />\r\n              </p>\r\n              <p>\r\n                Player 4:<input type=\"text\" value=\"\" name=\"player\" />\r\n              </p>\r\n              <p>\r\n                Player 5:<input type=\"text\" value=\"\" name=\"player\" />\r\n              </p>\r\n            </div>  \r\n          <div>\r\n            <Link to=\"enter-name-B\">\r\n                <p>Next</p>\r\n            </Link>\r\n          </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function EnterNameB() {\r\n    return (\r\n        <div className=\"enter-name-B d-flex justify-content-center align-items-center\">\r\n            <div className=\"text-center p-3\">\r\n                <h2>Please enter team A's name and player's number:</h2>\r\n                <div className=\"container-1\">\r\n                    <h1>\r\n                        Team B:<input type=\"text\" value=\"\" name=\"teamA\" />\r\n                    </h1>\r\n                    <p>\r\n                        Player 1:<input type=\"text\" value=\"\" name=\"player\" />\r\n                    </p>\r\n                    <p>\r\n                        Player 2:<input type=\"text\" value=\"\" name=\"player\" />               \r\n                    </p>\r\n                    <p>\r\n                        Player 3:<input type=\"text\" value=\"\" name=\"player\" />             \r\n                    </p>\r\n                    <p>\r\n                        Player 4:<input type=\"text\" value=\"\" name=\"player\" />         \r\n                    </p>\r\n                    <p>\r\n                        Player 5:<input type=\"text\" value=\"\" name=\"player\" />             \r\n                    </p> \r\n                </div>\r\n                <div>\r\n                    <Link to=\"scoreboard\">\r\n                        <p>Next</p>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Sroceboard = () =>{\r\n    return(\r\n        <div className=\"scoreboard d-flex justify-content-center align-items-center\">\r\n            <div className=\"text-center p-3\">\r\n               <h1>Yeah</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sroceboard;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function PageNotFound() {\r\n    return (\r\n        <div className=\"page-not-found d-flex justify-content-center align-items-center\">\r\n            <div className=\"text-center p-3\">\r\n                <h1>404 Error</h1>\r\n                <Link to=\"/\">\r\n                <span>Home</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Intro from \"./component/Intro\";\nimport EnterTime from './component/EnterTime'\nimport EnterNameA from \"./component/EnterNameA\";\nimport EnterNameB from \"./component/EnterNameB\";\nimport Scoreboard from './component/Scoreboard'\nimport PageNotFound from \"./component/PageNotFound\";\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">\n        <Switch>\n        <Route exact path=\"/\" component={Intro} />\n        <Route path=\"/enter-time\" component={EnterTime} />\n        <Route path=\"/enter-name-A\" component={EnterNameA} />\n        <Route path=\"/enter-name-B\" component={EnterNameB} />\n        <Route path=\"/scoreboard\" component={Scoreboard} />\n        <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}